import Genetic
import unittest

class Test(unittest.TestCase):
    def test_crossover(self):
        couple = [
            [1.39786, 1.14774, 1.42748, 28.9784, 25.92471, 29.49736, 0.14043, 7.74689, 7.3789, -8.13739, 6.24653, -7.41517],
            [0.74551, 0.61659, 0.96126, 35.06273, 24.82029, 37.88208, -7.03597, 7.75869, 3.59705, -3.13933, -3.53777, -2.14152]
        ]
        twins = [
            [1.39786, 1.14774, 1.42748, 28.9784, 25.92471, 29.49736, -7.03597, 7.75869, 3.59705, -3.13933, -3.53777, -2.14152],
            [0.74551, 0.61659, 0.96126, 35.06273, 24.82029, 37.88208, 0.14043, 7.74689, 7.3789, -8.13739, 6.24653, -7.41517]
        ]
        result = Genetic.Crossover(couple)
        self.assertEquals(result, twins)

        couple = [
            {'scale': [1.39786, 1.14774, 1.42748], 'thickness': [28.9784, 25.92471, 29.49736], 'translate': [0.14043, 7.74689, 7.3789], 'rotate': [-8.13739, 6.24653, -7.41517]},
            {'scale': [0.74551, 0.61659, 0.96126], 'thickness': [35.06273, 24.82029, 37.88208], 'translate': [-7.03597, 7.75869, 3.59705], 'rotate': [-3.13933, -3.53777, -2.14152]}
        ]
        twins = [
            {'scale': [1.39786, 1.14774, 1.42748], 'thickness': [28.9784, 25.92471, 29.49736], 'translate': [-7.03597, 7.75869, 3.59705], 'rotate': [-3.13933, -3.53777, -2.14152]},
            {'scale': [0.74551, 0.61659, 0.96126], 'thickness': [35.06273, 24.82029, 37.88208], 'translate': [0.14043, 7.74689, 7.3789], 'rotate': [-8.13739, 6.24653, -7.41517]}
        ]
        self.assertEquals(Genetic.Crossover(couple), twins)

if __name__ == '__main__':
    unittest.main()